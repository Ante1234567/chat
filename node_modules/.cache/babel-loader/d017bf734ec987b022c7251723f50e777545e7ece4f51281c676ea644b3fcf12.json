{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\Ante_ChatApp_Algebra\\\\w-chat\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Messages from \"./Messages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      member: {\n        username: randomName(),\n        color: randomColor()\n      }\n    };\n    this.onSendMessage = message => {\n      this.drone.publish({\n        room: \"observable-room\",\n        message\n      });\n    };\n    this.drone = new window.Scaledrone(\"YOUR-CHANNEL-ID\", {\n      data: this.state.member\n    });\n    this.drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = {\n        ...this.state.member\n      };\n      member.id = this.drone.clientId;\n      this.setState({\n        member\n      });\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({\n        member,\n        text: data\n      });\n      this.setState({\n        messages\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"My Chat App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        messages: this.state.messages,\n        currentMember: this.state.member\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onSendMessage: this.onSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["logo","Messages","jsxDEV","_jsxDEV","App","Component","constructor","state","messages","member","username","randomName","color","randomColor","onSendMessage","message","drone","publish","room","window","Scaledrone","data","on","error","console","id","clientId","setState","subscribe","push","text","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentMember","Input"],"sources":["C:/Users/Public/Ante_ChatApp_Algebra/w-chat/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Messages from \"./Messages\";\n\nclass App extends Component {\n  state = {\n    messages: [],\n    member: {\n      username: randomName(),\n      color: randomColor(),\n    }\n  }\n\n  constructor() {\n    super();\n    this.drone = new window.Scaledrone(\"YOUR-CHANNEL-ID\", {\n      data: this.state.member\n    });\n    this.drone.on('open', error => {\n      if (error) {\n        return console.error(error);\n      }\n      const member = {...this.state.member};\n      member.id = this.drone.clientId;\n      this.setState({member});\n    });\n    const room = this.drone.subscribe(\"observable-room\");\n    room.on('data', (data, member) => {\n      const messages = this.state.messages;\n      messages.push({member, text: data});\n      this.setState({messages});\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <h1>My Chat App</h1>\n        </div>\n        <Messages\n          messages={this.state.messages}\n          currentMember={this.state.member}\n        />\n        <Input\n          onSendMessage={this.onSendMessage}\n        />\n      </div>\n    );\n  }\n\n  onSendMessage = (message) => {\n    this.drone.publish({\n      room: \"observable-room\",\n      message\n    });\n  }\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,SAASC,SAAS,CAAC;EAS1BC,WAAWA,CAAA,EAAG;IACZ,KAAK,EAAE;IAAC,KATVC,KAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;QACNC,QAAQ,EAAEC,UAAU,EAAE;QACtBC,KAAK,EAAEC,WAAW;MACpB;IACF,CAAC;IAAA,KAwCDC,aAAa,GAAIC,OAAO,IAAK;MAC3B,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC;QACjBC,IAAI,EAAE,iBAAiB;QACvBH;MACF,CAAC,CAAC;IACJ,CAAC;IAzCC,IAAI,CAACC,KAAK,GAAG,IAAIG,MAAM,CAACC,UAAU,CAAC,iBAAiB,EAAE;MACpDC,IAAI,EAAE,IAAI,CAACd,KAAK,CAACE;IACnB,CAAC,CAAC;IACF,IAAI,CAACO,KAAK,CAACM,EAAE,CAAC,MAAM,EAAEC,KAAK,IAAI;MAC7B,IAAIA,KAAK,EAAE;QACT,OAAOC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MAC7B;MACA,MAAMd,MAAM,GAAG;QAAC,GAAG,IAAI,CAACF,KAAK,CAACE;MAAM,CAAC;MACrCA,MAAM,CAACgB,EAAE,GAAG,IAAI,CAACT,KAAK,CAACU,QAAQ;MAC/B,IAAI,CAACC,QAAQ,CAAC;QAAClB;MAAM,CAAC,CAAC;IACzB,CAAC,CAAC;IACF,MAAMS,IAAI,GAAG,IAAI,CAACF,KAAK,CAACY,SAAS,CAAC,iBAAiB,CAAC;IACpDV,IAAI,CAACI,EAAE,CAAC,MAAM,EAAE,CAACD,IAAI,EAAEZ,MAAM,KAAK;MAChC,MAAMD,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ;MACpCA,QAAQ,CAACqB,IAAI,CAAC;QAACpB,MAAM;QAAEqB,IAAI,EAAET;MAAI,CAAC,CAAC;MACnC,IAAI,CAACM,QAAQ,CAAC;QAACnB;MAAQ,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;EAEAuB,MAAMA,CAAA,EAAG;IACP,oBACE5B,OAAA;MAAK6B,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB9B,OAAA;QAAK6B,SAAS,EAAC,YAAY;QAAAC,QAAA,eACzB9B,OAAA;UAAA8B,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB,eACNlC,OAAA,CAACF,QAAQ;QACPO,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAS;QAC9B8B,aAAa,EAAE,IAAI,CAAC/B,KAAK,CAACE;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC,eACFlC,OAAA,CAACoC,KAAK;QACJzB,aAAa,EAAE,IAAI,CAACA;MAAc;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;AASF;AAEA,eAAejC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}